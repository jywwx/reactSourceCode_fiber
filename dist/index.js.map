{"version":3,"sources":["constants.js","unit.js","schedule.js","react-dom.js","index.js"],"names":["ELEMENT_TEXT","Symbol","for","TAG_ROOT","TAG_HOST","TAG_TEXT","PLACEMENT","UPDATE","DELETION","setProps","dom","oldProps","newProps","key","setProp","value","test","toLowerCase","styleName","style","setAttribute","nextUnitOfWork","workInProgressRoot","scheduleRoot","rootFiber","workLoop","deadLine","shouldYield","performUnitOfWork","timeRemaining","commitRoot","requestIdleCallback","timeout","currentFiber","firstEffect","commitWork","nextEffect","returnFiber","return","returnDOM","stateNode","effectTag","appendChild","beginWork","child","completeUnitOfWork","sibling","lastEffect","tag","updateHostRoot","updateHostText","updateHost","newChildren","props","children","reconcilieChildren","createDom","document","createTextNode","text","createElement","type","updatDOM","newChildIndex","prevSibling","length","newChild","newFiber","ReactDOM","render","element","container","console","log","border","margin","getElementById"],"mappings":";;AICA;;;;AJDO,AIAP,IJAaA,YAAY,GAAGC,MAAM,CAACC,GAAP,CAAW,cAAX,CAArB;AIEP,ADFA,ADQA,ADRO,SAASO,QAAT,CAAkBC,GAAlB,EAAuBC,QAAvB,EAAiCC,QAAjC,EAA2C;ADE3C,AICP,AHFI,IDCST,AICTgB,KAAK,GJDY,AICT,GJDYlB,MAAM,CAACC,GAAP,CAAW,UAAX,CAAjB;AICMwE,ADFb,ADQA,ADNI,EGASA,MAAM,EAAC,eAAR;AJAL,AIA6BC,AHChC,EGDgCA,EJAvBvE,GCCJ,CGDiC,EAAC,CHC9BS,CDDQ,ECCjB,CDDoBZ,GCCJW,GDDU,CAACV,GAAP,CAAW,ACC/B,EAA0B,QDDN,CAAjB;AIAK,AFHZ,ADKQ,CGFR,OHEYW,GAAG,KAAK,UAAZ,EAAwB;ADDzB,AIAP,AFHA,ADKYC,IDFCT,AIATiE,EHEQxD,KGFD,CJAU,CCEF,CGDjB,AHCkBJ,CDFIT,ECEL,EAAMY,EDFK,CAACX,ACEZ,EAAWU,CDFN,CAAW,MCEG,CAACC,GAAD,CAAnB,CAAP,EDFY,CAAjB,EAGP;AIFO,ADHP,ADAA,ADKS,EGFF,EAAE,ADHHuD,ECGI,IAAR,EDHY,GAAG;ACGF,ADFXC,ADAJ,ADKK,EGHU,ADFXA,KCEgB,CDFV,CCEalD,CDFnBkD;AHKG,AIHL,ADHe,ADEjB,ADKC,CEPD,GHMa/D,KIDT,IJCkB,GAAGL,MAAM,CAACC,GAAP,CAAW,WAAX,CAAlB,EACH;AIFK,ADDT,ADDA,EEES,EAAE,EAAC,IAAR;AAAa,ADAjB,ADDA,ADKA,EGJiB,KAAK,EAAGiB,AHIhBL,OAAT,CAAiBJ,GAAjB,EAAsBG,GAAtB,EAA2BE,KAA3B,EAAkC;ADD3B,AIHH,ADCJ,ADDA,ADKI,IDFSR,ECEL,GGHF,CJCa,ECELS,CDFQf,GCEd,CAAWY,EDFS,CAACX,ACErB,CAAJ,EDFkB,ACEG,CDFQ,QAAX,CAAf,EACH;AIFO,AFCX,ADGQQ,EGJG,EAAE,AFCTW,ADGIX,EGJM,CHIH,CAACG,EGJN,CHIS,CAACI,MCHE,GAAG,EDGT,ECHZ,ADGW,CAAH,CCHkB,EDGOF,KAAzB;AGJW,ADAnB,AFKK,EGLc,CHGf,IGHoB,EAAGI,ADAlBkD,AFKE,IAAIxD,EELf,CAAgByD,AFKE,KAAK,EELvB,EAAyBC,GFKd,EAAqB,IELhC,EAAoC;AHG7B,AIHD,ADAgC,ADEtC,ADIQ,IDHK/D,AEDTc,IEJA,AHQQP,EGHN,EJAe,CCGb,EDHgBd,ACGL,MDHW,CAACC,AEDT,GFCE,AEDC,CFCU,GEDnC,EAA8B,KFCN,CAAjB;AIAI,ADFPsE,AFMQ,EGJD,ADFPA,ECES,EAAC,GDFH,CCEL,ADFMC,CFMK,EENb,CAAYH,CFMKpD,MENjB,EAAqB,CFMb,IAAsBH,KAAtB,EAA6B,IENrC;ACEe,ADDf,ADEJ,ADIgBL,EGLG,IDDXc,CCCgB,CHKRd,CGLWS,AFClBI,EDIU,CAACJ,GENH,EFMD,CENI,AFMMD,GCJ1B,CAAsBM,KDIN,ICJhB,ADIuCT,ECJN,GDIW,CAACG,SAAD,CAA5B;AGLV,ADAE8B,ADC2B,ADKtB,IENLA,GAAG,CCLP,CAFF,ADOW7C,ECIT,iBDLgB;ACKX,ADJc,ADEnBmB,ADKK,EGHA,AFFLA,EEEO,EAAC,IAAR,UFFkB,GAAGE,SAArB;AEEa,ADHTgB,ADEJnB,ADKC,EGJY,AFDbA,CDDO,CEDHmB,GCGc,EAAGrB,AHId,IEPM,EAAEoD,CDED,GAAG/C,KCJD,IDIhB;AECA,ADH0B,ADG7B,ADKOd,IAAAA,GAAG,CGhBT,AHgBUU,CGjBZ,WHiBQ,CAAiBP,GAAjB,EAAsBE,KAAtB;AGFRyD,ADLQ,AFQH,OGHE,CAACC,GAAR,CAAYH,OAAZ,EAAoB,SAApB;ADJQjB,ADGR,ADKC,IEROA,KAAK,ADGJ5B,ECHM,MDGf,CAAkBC,QAAlB,EAA4B;AEE5B0C,ADLiBd,ADGa,MCHbA,QAAQ,EAAE,CAACgB,CCKnBD,MAAT,ADL2B,CCMzBC,OADF,EAEEb,QAAQ,CAACmB,cAAT,CAAwB,MAAxB,CAFF;ADLe,ADIX,KCRgB,CAImB,ADI/BjD,WAAW,GAAG,KAAlB,CADwB,CACA;;ACRR,ADShB,GCTA,MDSON,cAAc,IAAI,CAACM,WAA1B,EAAuC;ACFvC6C,ADGInD,ECHJmD,EDGInD,KCHG,CAACoD,GAA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","file":"index.js","sourceRoot":"..","sourcesContent":["export const ELEMENT_TEXT = Symbol.for(\"ELEMENT_TEXT\")\r\n\r\nexport const TAG_ROOT = Symbol.for(\"TAG_ROOT\")\r\nexport const TAG_HOST = Symbol.for(\"TAG_HOST\")\r\nexport const TAG_TEXT = Symbol.for(\"ELEMENT_TEXT\")\r\n\r\n\r\n// 插入节点 \r\nexport const PLACEMENT = Symbol.for(\"PLACEMENT\")\r\n    //更新节点\r\nexport const UPDATE = Symbol.for(\"UPDATE\")\r\n    //删除节点\r\nexport const DELETION = Symbol.for(\"DELETION\")","export function setProps(dom, oldProps, newProps) {\r\n    // for (let key in oldProps) {\r\n\r\n    // }\r\n    for (let key in newProps) {\r\n        if (key !== 'children') {\r\n            setProp(dom, key, newProps[key])\r\n        }\r\n    }\r\n}\r\n\r\nfunction setProp(dom, key, value) {\r\n    if (/^on/.test(key)) {\r\n        dom[key.toLowerCase()] = value\r\n    } else if (key === 'style') {\r\n        if (value) {\r\n            for (let styleName in value) {\r\n                dom.style[styleName] = value[styleName]\r\n            }\r\n        }\r\n    } else {\r\n        dom.setAttribute(key, value)\r\n    }\r\n}","/**\r\n * 从更节点 开始渲染调度\r\n * 两个阶段 \r\n * diff （Reconiliation） 阶段 对比新旧虚拟dom  进行增量  更新 或创建 render 阶段 这个阶段比较花时间 对任务 拆分 以一个虚拟dom 、\r\n * 节点为最先任务执行片段 此阶段可以暂停 原来 的递归深度遍历 不能暂停中断  生成结果effect list  知道那些节点更新了 那些节点新增了 那些节点删除了\r\n * 1. 根据 虚拟dom 生成fiber 数 2 收集effect List\r\n * commit 阶段 进行dom 更新或者创建 该过程不能中断 中断会导致 ui 不连续\r\n */\r\nimport { ELEMENT_TEXT, TAG_TEXT, TAG_ROOT, TAG_HOST, PLACEMENT } from './constants'\r\nimport { setProps } from './unit'\r\nlet nextUnitOfWork = null // 下一个fiber\r\nlet workInProgressRoot = null //Rootfiber 的根\r\n\r\nfunction scheduleRoot(rootFiber) { // {tag:TAG_ROOT,stateNode:container,props:{children:[element]}}\r\n    workInProgressRoot = rootFiber\r\n    nextUnitOfWork = rootFiber\r\n}\r\n\r\nfunction workLoop(deadLine) { // 工作循环\r\n    let shouldYield = false // 是否让出时间片 或者控制权\r\n    while (nextUnitOfWork && !shouldYield) {\r\n        nextUnitOfWork = performUnitOfWork(nextUnitOfWork)\r\n        shouldYield = deadLine.timeRemaining() < 1 // 执行完一个任务 没有剩余时间 交还 控制权给浏览器\r\n    }\r\n    if (!nextUnitOfWork && workInProgressRoot) {\r\n        // console.log(\"render阶段结束\", workInProgressRoot)\r\n        commitRoot()\r\n    } else {\r\n        requestIdleCallback(workLoop, { timeout: 500 }) //  还有任务 再次 请求浏览器的空闲回调\r\n    }\r\n}\r\nrequestIdleCallback(workLoop, { timeout: 500 })\r\n\r\nfunction commitRoot() {\r\n    let currentFiber = workInProgressRoot.firstEffect\r\n    while (currentFiber) {\r\n        commitWork(currentFiber)\r\n        currentFiber = currentFiber.nextEffect\r\n    }\r\n    workInProgressRoot = null\r\n}\r\n\r\nfunction commitWork(currentFiber) {\r\n    if (!currentFiber) return\r\n    let returnFiber = currentFiber.return\r\n    let returnDOM = returnFiber.stateNode\r\n    if (currentFiber.effectTag === PLACEMENT && returnDOM !== null && currentFiber.stateNode) {\r\n        returnDOM.appendChild(currentFiber.stateNode)\r\n    }\r\n    currentFiber.effectTag = null\r\n}\r\n\r\nfunction performUnitOfWork(currentFiber) {\r\n    beginWork(currentFiber)\r\n    if (currentFiber.child) {\r\n        return currentFiber.child\r\n    }\r\n    while (currentFiber) {\r\n        completeUnitOfWork(currentFiber) // 没有儿子 就让自己完成 看有没有弟弟 有弟弟返回弟弟 \r\n        if (currentFiber.sibling) {\r\n            return currentFiber.sibling\r\n        }\r\n        currentFiber = currentFiber.return //找到父亲  让父亲完成  再找父亲的弟弟\r\n    }\r\n}\r\n// 在完成 fiber 节点的创建 或者 fiber 节点的遍历的时候 要收集effect 组成我们的effect list   收集副作用  effect list 是单链表\r\nfunction completeUnitOfWork(currentFiber) {\r\n    let returnFiber = currentFiber.return\r\n    if (returnFiber) {\r\n        ////这一段是把自己儿子的effect 链 挂到父亲身上\r\n        if (!returnFiber.firstEffect) {\r\n            returnFiber.firstEffect = currentFiber.firstEffect\r\n        }\r\n        if (!!currentFiber.lastEffect) {\r\n            if (returnFiber.lastEffect) {\r\n                returnFiber.lastEffect.nextEffect = currentFiber.firstEffect\r\n            } else {\r\n                returnFiber.lastEffect = currentFiber.lastEffect\r\n            }\r\n        }\r\n        //////////////////分割线\r\n        // 这是把自己挂到父亲身上\r\n        const effectTag = currentFiber.effectTag\r\n            // 每个effect fiber 有两个属性 firstEffect 指向第一个有副作用的子 effect fiber  lastEffect 指向最后一个 有副作用的 子 effect fiber\r\n            // 中间的用nextEffect 做成一个单链表 firstEffect = 大儿子.nextEffect 二儿子.nextEffect 三儿子  lastEffect\r\n\r\n        if (effectTag) { // 自己有副作用\r\n            if (returnFiber) { // A1 \r\n                if (returnFiber.lastEffect) {\r\n                    returnFiber.lastEffect.nextEffect = currentFiber\r\n                } else {\r\n                    returnFiber.firstEffect = currentFiber\r\n                }\r\n                returnFiber.lastEffect = currentFiber\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n/**\r\n * 开始处理下线\r\n * \r\n * completeUnitOfWork\r\n * @param {*} fiber \r\n */\r\nfunction beginWork(currentFiber) {\r\n    // 1.创建dom 元素\r\n    // 2. 创建子fiber\r\n    if (currentFiber.tag === TAG_ROOT) {\r\n        updateHostRoot(currentFiber)\r\n    } else if (currentFiber.tag === TAG_TEXT) {\r\n        updateHostText(currentFiber)\r\n    } else if (currentFiber.tag === TAG_HOST) {\r\n        updateHost(currentFiber)\r\n    }\r\n}\r\n\r\n\r\nfunction updateHostRoot(currentFiber) { //处理根节点\r\n    // 先处理自己，如果是一个原生节点，创建真实dom 2. 创建子fiber\r\n    let newChildren = currentFiber.props.children\r\n    reconcilieChildren(currentFiber, newChildren) // 调和子节点 [A1]\r\n}\r\n\r\nfunction updateHostText(currentFiber) { // 创建文本节点\r\n    if (!currentFiber.stateNode) {\r\n        currentFiber.stateNode = createDom(currentFiber)\r\n    }\r\n}\r\n\r\nfunction updateHost(currentFiber) { // 处理原生dom 节点\r\n    if (!currentFiber.stateNode) {\r\n        currentFiber.stateNode = createDom(currentFiber)\r\n    }\r\n    reconcilieChildren(currentFiber, currentFiber.props.children)\r\n}\r\n\r\nfunction createDom(currentFiber) { // 根据fiber 创建真实的dom\r\n    if (currentFiber.tag === TAG_TEXT) {\r\n        return document.createTextNode(currentFiber.props.text)\r\n    } else if (currentFiber.tag === TAG_HOST) {\r\n        let stateNode = document.createElement(currentFiber.type)\r\n        updatDOM(stateNode, {}, currentFiber.props)\r\n        return stateNode\r\n    }\r\n}\r\n\r\nfunction updatDOM(dom, oldProps, newProps) {\r\n    setProps(dom, oldProps, newProps)\r\n}\r\n\r\nfunction reconcilieChildren(currentFiber, newChildren) { // 当前fiber  newchild 子节点的虚拟dom  [A1]\r\n    let newChildIndex = 0; // 新子节点的索引\r\n    let prevSibling; // 上一个新的子fiber\r\n    //遍历我们的子虚拟dom 元素数组 为每个虚拟dom创建fiber\r\n    while (newChildIndex < newChildren.length) {\r\n        let newChild = newChildren[newChildIndex] // 取出虚拟dom 节点 元素节点\r\n        let tag;\r\n        if (newChild.type === ELEMENT_TEXT) {\r\n            tag = TAG_TEXT // 这是一个文本节点\r\n        } else if (typeof newChild.type === 'string') {\r\n            tag = TAG_HOST // 这是一个原生dom节点\r\n        } // beginWork创建fiber， 在completeUnitOfWork 的时候 收集effect\r\n        let newFiber = {\r\n            tag,\r\n            type: newChild.type,\r\n            props: newChild.props,\r\n            stateNode: null,\r\n            return: currentFiber,\r\n            effectTag: PLACEMENT, // 副作用标识 render 我们会收集副作用 \r\n            nextEffect: null // effect list 也是一个单链表\r\n        }\r\n\r\n\r\n        // 创建链表  最小的儿子 没有sibling\r\n\r\n        if (newFiber) {\r\n            if (newChildIndex === 0) { // 索引为0 第一个儿子  \r\n                currentFiber.child = newFiber\r\n            } else {\r\n                prevSibling.sibling = newFiber\r\n            }\r\n            prevSibling = newFiber\r\n        }\r\n\r\n        newChildIndex++\r\n    }\r\n\r\n}\r\nexport default scheduleRoot","import { TAG_ROOT } from './constants'\r\nimport scheduleRoot from './schedule'\r\nconst ReactDOM = {\r\n    render\r\n}\r\n\r\n/**\r\n * 把一个元素 渲染到容器\r\n */\r\nfunction render(element, container) { // container == root 真是dom\r\n    console.log(element, \"elementelement\")\r\n    let rootFiber = {\r\n        tag: TAG_ROOT, //每个fiber 都有一个tag  标识 元素的类型\r\n        stateNode: container, // 一般情况下如果这个元素是一个原生节点，stateNode指向真实dom元素\r\n        //props.children  是一个数组 里面放的是react 元素 虚拟dom  后面在递归阶段 会 根据react 递归创建 fiber\r\n        props: { children: [element] } //当前filer 的children 属性是将要渲染的元素 在当前fiber 内还不是filer  \r\n    }\r\n\r\n    console.log(rootFiber, \"elementelement\")\r\n    scheduleRoot(rootFiber)\r\n}\r\n\r\nexport default ReactDOM","// import React from './react';\nimport ReactDOM from './react-dom';\n// console.log(React.createElement)\nlet style = {border:'3px solid red',margin:'5px'}\nlet element = (\n  <div id=\"A1\" style ={style}>\n    A1\n    <div id=\"B1\" style ={style}>\n      B1\n      <div id=\"C1\" style ={style}>\n      C1\n      </div>\n      <div id=\"C2\" style ={style}>\n      C2\n      </div>\n    </div>\n    <div id='B2' style ={style}>B2</div>\n  </div>\n)\nconsole.log(element,\"element\")\nReactDOM.render(\n  element,\n  document.getElementById('root')\n);\n\n"]}